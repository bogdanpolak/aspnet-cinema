// <auto-generated />
using System;
using Data.Cinema;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Data.Cinema.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20210217195733_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "en_US.UTF-8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Data.Cinema.Entites.Movie", b =>
                {
                    b.Property<int>("Movieid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("movieid")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Movieid");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("Data.Cinema.Entites.Room", b =>
                {
                    b.Property<int>("Roomid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("roomid")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Columns")
                        .HasColumnType("integer")
                        .HasColumnName("columns");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Rows")
                        .HasColumnType("integer")
                        .HasColumnName("rows");

                    b.HasKey("Roomid");

                    b.ToTable("rooms");
                });

            modelBuilder.Entity("Data.Cinema.Entites.Show", b =>
                {
                    b.Property<int>("Showid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("showid")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Movieid")
                        .HasColumnType("integer")
                        .HasColumnName("movieid");

                    b.Property<int>("Roomid")
                        .HasColumnType("integer")
                        .HasColumnName("roomid");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start");

                    b.HasKey("Showid")
                        .HasName("shows_pkey");

                    b.HasIndex("Movieid");

                    b.HasIndex("Roomid");

                    b.ToTable("shows");
                });

            modelBuilder.Entity("Data.Cinema.Entites.Ticket", b =>
                {
                    b.Property<int>("Ticketid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ticketid")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<int>("Rownum")
                        .HasColumnType("integer")
                        .HasColumnName("rownum");

                    b.Property<int>("Seatnum")
                        .HasColumnType("integer")
                        .HasColumnName("seatnum");

                    b.Property<int>("Showid")
                        .HasColumnType("integer")
                        .HasColumnName("showid");

                    b.HasKey("Ticketid");

                    b.HasIndex("Showid");

                    b.ToTable("tickets");
                });

            modelBuilder.Entity("Data.Cinema.Entites.Show", b =>
                {
                    b.HasOne("Data.Cinema.Entites.Movie", "Movie")
                        .WithMany("Shows")
                        .HasForeignKey("Movieid")
                        .HasConstraintName("shows_movieid_fkey")
                        .IsRequired();

                    b.HasOne("Data.Cinema.Entites.Room", "Room")
                        .WithMany("Shows")
                        .HasForeignKey("Roomid")
                        .HasConstraintName("shows_roomid_fkey")
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Data.Cinema.Entites.Ticket", b =>
                {
                    b.HasOne("Data.Cinema.Entites.Show", "Show")
                        .WithMany("Tickets")
                        .HasForeignKey("Showid")
                        .HasConstraintName("tickets_showid_fkey")
                        .IsRequired();

                    b.Navigation("Show");
                });

            modelBuilder.Entity("Data.Cinema.Entites.Movie", b =>
                {
                    b.Navigation("Shows");
                });

            modelBuilder.Entity("Data.Cinema.Entites.Room", b =>
                {
                    b.Navigation("Shows");
                });

            modelBuilder.Entity("Data.Cinema.Entites.Show", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
